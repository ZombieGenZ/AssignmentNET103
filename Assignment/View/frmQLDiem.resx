<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnToStart.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAYpJREFUSEu1
        lqFywkAURVegkMgqPgCFQ1V2mOkPoNB1tXwBDhlXj8LV1df3B2o7U4OqqWjv3WyWuy+vZEunb+Ywye55
        mSyXTQg397dnQY3AEzgKL2BivBl4A+o1xcU8ohTCl/AB5saZgFegHm9iXFzMglonWVk73qPMk3cwjXNW
        7kDNAe9WGxvH28o8+QTLPK9yHvSX/AxGxlumOWVTOHoSB06hahPDuzIeQ2WQ6u3ViV5vIISdNBAueWGc
        MWCI6sVQ1YtuceKHeqdO8g4yT7iSGGrPzQd+qA8qJ28j8x05VEv78XOoxZJRg6FaWLWhToEN9aCOB8sL
        9dpI1aFaWHugjcxhZqSqfeHB8u6OF7MPs6qdbWk/2u+Xzw9tZi52567SnNL7GSunA3zvgN+/Nm9VTt7g
        RlTKE9xNalJWxqn61WW/N4DNlZo6fhP6+UdFHGhDp6zNXuh82A3vfDsQB7FcwGVr80Wh5wMLagFs6DvH
        8144eaMWsgV1aejDr8wO1P+99AnqD39bQvMNpNLz8Cdq+WYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnToEnd.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        GwAAARsBjfdO5QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIjSURBVEhLndY7
        aBRRFIfxE9cg8YGSiAhKQCxsDIGIhSkkjUUq20AQtIlVWgvtLANbWERSSDobQawsBAULLWzEB2IhoiLi
        A3wVvvCxfmdy7vq/Z6fywi9k5n5nQnZ2kjXWMj6JN5jo9XpWsLbiPrS7gWHt2vgawV34UfEUoymcwldo
        t6JNm7UvZuN4F0PFNXSq2Gw+9tSCNtm/b8xm8DOGiiWNo+vKvvuB6dwV9YHZYgypudR0cD32itfYpV2/
        HzhhthpDxRdMpmYMz6DdHWzQrmkHThBFrMN+sbHUTcJ/uHar2jRdPtGc5NeF/9o67C9LvulzsacWq0YP
        FGsafgN1uNvSLcm+8zfKTH9f44y1EENqPjV+0/0trY2/5cebfY3bsFZiqPCHbSo1o/CHUzt/eEeqi7Vh
        DeM2dPgFtqduAvmmX6wu1oa1GY9ioHiATak7jPygdquLZawhXI64+IC9qduNt9DO/xh2qgtmrNMRF78x
        m5q25+Y5mpewuqBizcIvqINnWroLsu+qN0EV90/yEuAjdPAKhlJ3MvbUsarRg+YENw8PIy4eY0vqDiE/
        iOe0abqBE2aXZMB9xr7U7MQraHcT67Vr2urA7FTExR8cTY0/F7eg3Uvs0K7f978xO4Jf0MGzGkfn/8O1
        +Y6DuSvWvpjtwXvo4FWsq2Kz47GnTmiT+dqIe9ChJ9iWwgP4Bu2WtWnj6zz044h/bNmfov/82NKzv5UK
        ANcapJa5AAAAAElFTkSuQmCC
</value>
  </data>
</root>